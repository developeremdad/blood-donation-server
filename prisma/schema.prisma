// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  name         String
  email        String       @unique
  password     String
  bloodType    String?
  location     String?
  availability Boolean      @default(false)
  photo        String?      @default("")
  contact      String       @default("")
  role         UserRoleEnum @default(USER)
  status       UserStatus   @default(ACTIVATE)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  userProfile  UserProfile?
  donor        Request[]    @relation(name: "donor")
  request      Request?     @relation(name: "requester")

  @@map("users")
}

model Request {
  id              String            @id @default(uuid())
  donorId         String
  donor           User              @relation(name: "donor", fields: [donorId], references: [id])
  requesterId     String            @unique
  phoneNumber     String
  dateOfDonation  String
  timeOfDonation  String
  hospitalName    String
  hospitalAddress String
  reason          String
  agreeTerms      Boolean
  requestStatus   RequestStatusEnum @default(PENDING)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  requester       User              @relation(name: "requester", fields: [requesterId], references: [id])

  @@map("requests")
}

model UserProfile {
  id               String   @id @default(uuid())
  userId           String   @unique
  bio              String?
  age              Int
  lastDonationDate String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

enum RequestStatusEnum {
  PENDING
  APPROVED
  REJECTED
}

enum UserRoleEnum {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVATE
  DEACTIVATED
}
